import { generateText } from "ai";
import { getAnalyticsModel } from "./openrouter";

/**
 * AI –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Å–æ–≤–µ—Ç–Ω–∏–∫ - –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è
 */

export interface FinancialHealthScore {
  overall_score: number; // 0-100
  breakdown: {
    savings_rate: number; // 0-100
    expense_stability: number; // 0-100
    budget_adherence: number; // 0-100
    debt_management: number; // 0-100
    emergency_fund: number; // 0-100
  };
  grade: "Excellent" | "Good" | "Fair" | "Poor" | "Critical";
}

export interface MoneyLeak {
  category: string;
  amount: number;
  percentage_of_income: number;
  recommendation: string;
  potential_savings: number;
}

export interface FinancialAdvice {
  type: "optimization" | "warning" | "opportunity" | "goal" | "automation" | "milestone";
  title: string;
  description: string;
  action_items: string[];
  impact: "high" | "medium" | "low";
  priority: number; // 1-10
  expected_result?: string; // –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
}

export interface IdealBudget {
  needs: number; // % (housing, utilities, food, transport)
  wants: number; // % (entertainment, dining, shopping)
  savings: number; // % (emergency fund, investments, goals)
  user_actual: {
    needs: number;
    wants: number;
    savings: number;
  };
  recommendations: string[];
}

/**
 * –†–∞—Å—á—ë—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è
 */
export function calculateFinancialHealth(data: {
  monthly_income: number;
  monthly_expense: number;
  monthly_savings: number;
  emergency_fund: number;
  total_debt: number;
  budget_compliance_rate: number; // 0-100%
  expense_variance: number; // –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–∞—Ä–∏–∞—Ü–∏–∏
}): FinancialHealthScore {
  const {
    monthly_income,
    monthly_expense,
    monthly_savings,
    emergency_fund,
    total_debt,
    budget_compliance_rate,
    expense_variance,
  } = data;

  // 1. Savings Rate (20% weight)
  const savingsRate = monthly_income > 0 ? (monthly_savings / monthly_income) * 100 : 0;
  let savingsScore = 0;
  if (savingsRate >= 30) savingsScore = 100;
  else if (savingsRate >= 20) savingsScore = 80;
  else if (savingsRate >= 10) savingsScore = 60;
  else if (savingsRate >= 5) savingsScore = 40;
  else savingsScore = 20;

  // 2. Expense Stability (15% weight)
  // –ú–µ–Ω—å—à–µ –≤–∞—Ä–∏–∞—Ü–∏—è = –ª—É—á—à–µ
  const stabilityScore = Math.max(0, Math.min(100, 100 - expense_variance * 100));

  // 3. Budget Adherence (20% weight)
  const budgetScore = budget_compliance_rate;

  // 4. Debt Management (25% weight)
  const monthlyDebtRatio = monthly_income > 0 ? (total_debt / monthly_income) : 0;
  let debtScore = 100;
  if (monthlyDebtRatio > 10) debtScore = 20;
  else if (monthlyDebtRatio > 5) debtScore = 40;
  else if (monthlyDebtRatio > 3) debtScore = 60;
  else if (monthlyDebtRatio > 1) debtScore = 80;

  // 5. Emergency Fund (20% weight)
  const monthsOfExpenses = monthly_expense > 0 ? emergency_fund / monthly_expense : 0;
  let emergencyScore = 0;
  if (monthsOfExpenses >= 6) emergencyScore = 100;
  else if (monthsOfExpenses >= 3) emergencyScore = 70;
  else if (monthsOfExpenses >= 1) emergencyScore = 40;
  else emergencyScore = 20;

  // Overall Score
  const overallScore = Math.round(
    savingsScore * 0.2 +
    stabilityScore * 0.15 +
    budgetScore * 0.2 +
    debtScore * 0.25 +
    emergencyScore * 0.2
  );

  let grade: "Excellent" | "Good" | "Fair" | "Poor" | "Critical";
  if (overallScore >= 85) grade = "Excellent";
  else if (overallScore >= 70) grade = "Good";
  else if (overallScore >= 50) grade = "Fair";
  else if (overallScore >= 30) grade = "Poor";
  else grade = "Critical";

  return {
    overall_score: overallScore,
    breakdown: {
      savings_rate: Math.round(savingsScore),
      expense_stability: Math.round(stabilityScore),
      budget_adherence: Math.round(budgetScore),
      debt_management: Math.round(debtScore),
      emergency_fund: Math.round(emergencyScore),
    },
    grade,
  };
}

/**
 * –í—ã—è–≤–ª–µ–Ω–∏–µ "–¥–µ–Ω–µ–∂–Ω—ã—Ö —É—Ç–µ—á–µ–∫"
 */
export function detectMoneyLeaks(
  categoryExpenses: { category: string; amount: number }[],
  monthlyIncome: number,
  benchmarks: { [key: string]: number } // % –æ—Ç –¥–æ—Ö–æ–¥–∞
): MoneyLeak[] {
  const leaks: MoneyLeak[] = [];

  categoryExpenses.forEach(({ category, amount }) => {
    const percentage = (amount / monthlyIncome) * 100;
    const benchmark = benchmarks[category.toLowerCase()] || 100; // –µ—Å–ª–∏ –Ω–µ—Ç –±–µ–Ω—á–º–∞—Ä–∫–∞, –Ω–µ —Å—á–∏—Ç–∞–µ–º —É—Ç–µ—á–∫–æ–π

    if (percentage > benchmark) {
      const excess = amount - (monthlyIncome * benchmark) / 100;
      leaks.push({
        category,
        amount,
        percentage_of_income: percentage,
        recommendation: generateLeakRecommendation(category, percentage, benchmark),
        potential_savings: excess,
      });
    }
  });

  return leaks.sort((a, b) => b.potential_savings - a.potential_savings);
}

function generateLeakRecommendation(
  category: string,
  actual: number,
  benchmark: number
): string {
  const excess = actual - benchmark;
  return `–í—ã —Ç—Ä–∞—Ç–∏—Ç–µ ${actual.toFixed(1)}% –¥–æ—Ö–æ–¥–∞ –Ω–∞ ${category}, —á—Ç–æ –Ω–∞ ${excess.toFixed(1)}% –±–æ–ª—å—à–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–≥–æ. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.`;
}

/**
 * –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å "–∏–¥–µ–∞–ª—å–Ω—ã–º" –±—é–¥–∂–µ—Ç–æ–º (–ø—Ä–∞–≤–∏–ª–æ 50/30/20)
 */
export function compareWithIdealBudget(
  needs: number,
  wants: number,
  savings: number
): IdealBudget {
  const recommendations: string[] = [];

  if (needs > 50) {
    recommendations.push(
      `–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞—Å—Ö–æ–¥—ã —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç ${needs.toFixed(0)}% (–∏–¥–µ–∞–ª: 50%). –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–µ—Ä–µ–µ–∑–¥ –≤ –±–æ–ª–µ–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –∂–∏–ª—å–µ –∏–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π.`
    );
  }

  if (wants > 30) {
    recommendations.push(
      `–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–∞—Ç—ã —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç ${wants.toFixed(0)}% (–∏–¥–µ–∞–ª: 30%). –ï—Å—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π, –ø–æ–¥–ø–∏—Å–æ–∫ –∏ –∫–∞—Ñ–µ.`
    );
  }

  if (savings < 20) {
    recommendations.push(
      `–ù–∞–∫–æ–ø–ª–µ–Ω–∏—è —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç —Ç–æ–ª—å–∫–æ ${savings.toFixed(0)}% (–∏–¥–µ–∞–ª: 20%). –£–≤–µ–ª–∏—á—å—Ç–µ –Ω–æ—Ä–º—É —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏.`
    );
  }

  if (recommendations.length === 0) {
    recommendations.push("–í–∞—à –±—é–¥–∂–µ—Ç –±–ª–∏–∑–æ–∫ –∫ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–º—É! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ.");
  }

  return {
    needs: 50,
    wants: 30,
    savings: 20,
    user_actual: { needs, wants, savings },
    recommendations,
  };
}

/**
 * AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤
 */
export async function generatePersonalizedAdvice(context: {
  health_score: FinancialHealthScore;
  money_leaks: MoneyLeak[];
  monthly_income: number;
  monthly_expense: number;
  goals?: string[];
}): Promise<FinancialAdvice[]> {
  try {
    const savingsRate = context.monthly_income > 0 
      ? ((context.monthly_income - context.monthly_expense) / context.monthly_income * 100).toFixed(1)
      : "0";
    
    const leaksText = context.money_leaks.length > 0
      ? context.money_leaks.map(l => `${l.category}: ${(l.amount / 100).toFixed(0)} ‚ÇΩ/–º–µ—Å (${l.percentage_of_income.toFixed(1)}% –¥–æ—Ö–æ–¥–∞, –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è: ${(l.potential_savings / 100).toFixed(0)} ‚ÇΩ)`).join("\n- ")
      : "–Ω–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Ç–µ—á–µ–∫";

    const prompt = `–¢—ã –æ–ø—ã—Ç–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Å–æ–≤–µ—Ç–Ω–∏–∫. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –¥–∞–π –†–û–í–ù–û 5 –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.

üìä –§–ò–ù–ê–ù–°–û–í–´–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò:
- –û–±—â–∏–π –±–∞–ª–ª –∑–¥–æ—Ä–æ–≤—å—è: ${context.health_score.overall_score}/100 (${context.health_score.grade})
- –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥: ${(context.monthly_income / 100).toFixed(0)} ‚ÇΩ
- –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π —Ä–∞—Å—Ö–æ–¥: ${(context.monthly_expense / 100).toFixed(0)} ‚ÇΩ
- –ù–æ—Ä–º–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π: ${savingsRate}%
- –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–¥–µ–Ω–µ–∂–Ω—ã–µ —É—Ç–µ—á–∫–∏):
  ${leaksText}
${context.goals ? `- –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏: ${context.goals.join(", ")}` : ""}

üéØ –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –°–û–í–ï–¢–ê–ú:
1. –†–û–í–ù–û 5 —Å–æ–≤–µ—Ç–æ–≤ (–Ω–µ –±–æ–ª—å—à–µ, –Ω–µ –º–µ–Ω—å—à–µ)
2. –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏ –ø—Ä–∏–º–µ–Ω–∏–º—ã–µ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ
3. –£—á–∏—Ç—ã–≤–∞–π —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞
4. –ü—Ä–∏–æ—Ä–∏—Ç–µ–∑–∏—Ä—É–π –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏ (1 = —Å–∞–º—ã–π –≤–∞–∂–Ω—ã–π)
5. –£–∫–∞–∂–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –æ–∂–∏–¥–∞–µ–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç

üìã –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (—Ç–æ–ª—å–∫–æ JSON, –±–µ–∑ —Ç–µ–∫—Å—Ç–∞):
[
  {
    "type": "optimization|warning|opportunity|goal|automation",
    "title": "–ö—Ä–∞—Ç–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ (–¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤)",
    "description": "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ –∏ –∫–∞–∫ —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)",
    "action_items": [
      "–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —à–∞–≥ 1 —Å —Ü–∏—Ñ—Ä–∞–º–∏",
      "–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —à–∞–≥ 2 —Å —Ü–∏—Ñ—Ä–∞–º–∏",
      "–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —à–∞–≥ 3 —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º"
    ],
    "impact": "high|medium|low",
    "priority": 1-5,
    "expected_result": "–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: —ç–∫–æ–Ω–æ–º–∏—è 5000‚ÇΩ/–º–µ—Å)"
  }
]

–¢–ò–ü–´ –°–û–í–ï–¢–û–í:
- optimization: –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤
- warning: –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Ä–∏—Å–∫–∞—Ö
- opportunity: –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–ª—É—á—à–µ–Ω–∏—è
- goal: –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–∏
- automation: –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É—á—ë—Ç–∞

–¢–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–π JSON –º–∞—Å—Å–∏–≤, –±–µ–∑ markdown, –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ –¥–æ –∏ –ø–æ—Å–ª–µ!`;

    const { text } = await generateText({
      model: getAnalyticsModel(),
      prompt,
      temperature: 0.7,
    });

    // –ü–∞—Ä—Å–∏–º JSON
    const jsonMatch = text.match(/\[[\s\S]*\]/);
    if (jsonMatch) {
      const advice = JSON.parse(jsonMatch[0]);
      // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –≤–µ—Ä–Ω—É–ª–æ—Å—å —Ä–æ–≤–Ω–æ 5 —Å–æ–≤–µ—Ç–æ–≤
      return advice.slice(0, 5);
    }

    // Fallback: –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö
    const fallbackAdvice: FinancialAdvice[] = [];
    
    // 1. –ù–æ—Ä–º–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π
    if (parseFloat(savingsRate) < 20) {
      fallbackAdvice.push({
        type: "warning",
        title: "–£–≤–µ–ª–∏—á—å—Ç–µ –Ω–æ—Ä–º—É —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π",
        description: `–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è –Ω–æ—Ä–º–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π ${savingsRate}% –Ω–∏–∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö 20%. –≠—Ç–æ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Ä–∏—Å–∫–∏ –≤ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ.`,
        action_items: [
          `–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∞–≤—Ç–æ–ø–ª–∞—Ç—ë–∂ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å—á—ë—Ç –≤ —Ä–∞–∑–º–µ—Ä–µ ${(context.monthly_income * 0.2 / 100).toFixed(0)} ‚ÇΩ`,
          "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª–æ 50/30/20: 50% –Ω–∞ –Ω—É–∂–¥—ã, 30% –Ω–∞ –∂–µ–ª–∞–Ω–∏—è, 20% –Ω–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è",
          "–ü–µ—Ä–µ—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '–∂–µ–ª–∞–Ω–∏—è' –∏ —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ –Ω–∞ 10%"
        ],
        impact: "high",
        priority: 1,
      });
    }

    // 2. –î–µ–Ω–µ–∂–Ω—ã–µ —É—Ç–µ—á–∫–∏
    if (context.money_leaks.length > 0) {
      const topLeak = context.money_leaks[0];
      fallbackAdvice.push({
        type: "optimization",
        title: `–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ "${topLeak.category}"`,
        description: `–í—ã —Ç—Ä–∞—Ç–∏—Ç–µ ${topLeak.percentage_of_income.toFixed(1)}% –¥–æ—Ö–æ–¥–∞ –Ω–∞ —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é. –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è: ${(topLeak.potential_savings / 100).toFixed(0)} ‚ÇΩ/–º–µ—Å.`,
        action_items: [
          `–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±—é–¥–∂–µ—Ç ${(topLeak.amount * 0.7 / 100).toFixed(0)} ‚ÇΩ/–º–µ—Å –Ω–∞ "${topLeak.category}"`,
          "–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –∫–∞–∂–¥—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 2 –Ω–µ–¥–µ–ª–∏",
          `–ù–∞–π–¥–∏—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã –∏ —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ 30% = ${(topLeak.potential_savings / 100).toFixed(0)} ‚ÇΩ/–º–µ—Å`
        ],
        impact: "high",
        priority: 2,
      });
    }

    // 3. –ê–≤–∞—Ä–∏–π–Ω—ã–π —Ñ–æ–Ω–¥
    fallbackAdvice.push({
      type: "goal",
      title: "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥—É—à–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
      description: "–ê–≤–∞—Ä–∏–π–Ω—ã–π —Ñ–æ–Ω–¥ –≤ —Ä–∞–∑–º–µ—Ä–µ 3-6 –º–µ—Å—è—á–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞—â–∏—Ç–∏—Ç –æ—Ç –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π.",
      action_items: [
        `–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Ü–µ–ª–µ–≤—É—é —Å—É–º–º—É: ${(context.monthly_expense * 3 / 100).toFixed(0)} ‚ÇΩ (–º–∏–Ω–∏–º—É–º 3 –º–µ—Å—è—Ü–∞)`,
        `–û—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ ${(context.monthly_income * 0.1 / 100).toFixed(0)} ‚ÇΩ/–º–µ—Å (10% –¥–æ—Ö–æ–¥–∞)`,
        "–•—Ä–∞–Ω–∏—Ç–µ —Ñ–æ–Ω–¥ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–º –¥–µ–ø–æ–∑–∏—Ç–µ —Å –¥–æ—Å—Ç—É–ø–æ–º –∑–∞ 1-2 –¥–Ω—è"
      ],
      impact: "high",
      priority: 3,
    });

    // 4. –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
    fallbackAdvice.push({
      type: "automation",
      title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —É—á—ë—Ç",
      description: "–†–µ–≥—É–ª—è—Ä–Ω—ã–π —É—á—ë—Ç –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–∑–≤–æ–ª–∏—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –≤—ã—è–≤–ª—è—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –∑–∞—Ä–∞–Ω–µ–µ.",
      action_items: [
        "–í–Ω–æ—Å–∏—Ç–µ –∫–∞–∂–¥—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏",
        "–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –±—é–¥–∂–µ—Ç—ã 2 —Ä–∞–∑–∞ –≤ –º–µ—Å—è—Ü (1-–≥–æ –∏ 15-–≥–æ —á–∏—Å–ª–∞)",
        "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫ –ª–∏–º–∏—Ç–∞–º"
      ],
      impact: "medium",
      priority: 4,
    });

    // 5. –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    fallbackAdvice.push({
      type: "opportunity",
      title: "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–ª–∞–Ω –Ω–∞ –≥–æ–¥",
      description: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä—É–ø–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ —Ü–µ–ª–µ–π –ø–æ–º–æ–∂–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Å—Ç—Ä–µ—Å—Å–æ–≤ –∏ –¥–æ—Å—Ç–∏—á—å –∂–µ–ª–∞–µ–º–æ–≥–æ.",
      action_items: [
        "–°–æ—Å—Ç–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π –Ω–∞ –≥–æ–¥ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏",
        `–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ –≤–∑–Ω–æ—Å—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Ü–µ–ª–∏`,
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª '–ü–ª–∞–Ω—ã' –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"
      ],
      impact: "medium",
      priority: 5,
    });

    return fallbackAdvice.slice(0, 5);
  } catch (error) {
    console.error("AI advice generation error:", error);
    
    // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π fallback
    return [
      {
        type: "optimization",
        title: "–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –±—é–¥–∂–µ—Ç",
        description: "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∫—Ä—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –Ω–∞–π–¥–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏.",
        action_items: [
          "–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é —Ç—Ä–∞—Ç –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü",
          "–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
          "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±—é–¥–∂–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
        ],
        impact: "medium",
        priority: 1,
      },
    ];
  }
}

/**
 * –ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π
 */
export function generateActionPlan(
  currentState: {
    monthly_savings: number;
    debt: number;
    emergency_fund: number;
  },
  goals: {
    target_savings?: number;
    pay_off_debt?: boolean;
    build_emergency_fund?: number; // –º–µ—Å—è—Ü–µ–≤ —Ä–∞—Å—Ö–æ–¥–æ–≤
  },
  monthlyIncome: number,
  monthlyExpense: number
): {
  steps: { step: number; title: string; description: string; duration_months: number }[];
  total_months: number;
} {
  const steps: { step: number; title: string; description: string; duration_months: number }[] = [];
  let totalMonths = 0;
  let stepNum = 1;

  // 1. –ê–≤–∞—Ä–∏–π–Ω—ã–π —Ñ–æ–Ω–¥ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1)
  if (goals.build_emergency_fund) {
    const targetAmount = monthlyExpense * goals.build_emergency_fund;
    const needed = Math.max(0, targetAmount - currentState.emergency_fund);
    const monthsNeeded = currentState.monthly_savings > 0 
      ? Math.ceil(needed / currentState.monthly_savings)
      : Infinity;

    if (monthsNeeded < Infinity) {
      steps.push({
        step: stepNum++,
        title: `–°–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ä–∏–π–Ω—ã–π —Ñ–æ–Ω–¥ –Ω–∞ ${goals.build_emergency_fund} –º–µ—Å`,
        description: `–ù–∞–∫–æ–ø–∏—Ç–µ ${(needed / 100).toFixed(0)} ‚ÇΩ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –ø–æ–¥—É—à–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏`,
        duration_months: monthsNeeded,
      });
      totalMonths += monthsNeeded;
    }
  }

  // 2. –ü–æ–≥–∞—à–µ–Ω–∏–µ –¥–æ–ª–≥–æ–≤ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2)
  if (goals.pay_off_debt && currentState.debt > 0) {
    const monthsNeeded = currentState.monthly_savings > 0
      ? Math.ceil(currentState.debt / currentState.monthly_savings)
      : Infinity;

    if (monthsNeeded < Infinity) {
      steps.push({
        step: stepNum++,
        title: "–ü–æ–≥–∞—Å–∏—Ç—å –¥–æ–ª–≥–∏",
        description: `–ò–∑–±–∞–≤—å—Ç–µ—Å—å –æ—Ç ${(currentState.debt / 100).toFixed(0)} ‚ÇΩ –¥–æ–ª–≥–∞`,
        duration_months: monthsNeeded,
      });
      totalMonths += monthsNeeded;
    }
  }

  // 3. –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–µ–≤—ã—Ö –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3)
  if (goals.target_savings) {
    const alreadySaved = currentState.emergency_fund;
    const needed = Math.max(0, goals.target_savings - alreadySaved);
    const monthsNeeded = currentState.monthly_savings > 0
      ? Math.ceil(needed / currentState.monthly_savings)
      : Infinity;

    if (monthsNeeded < Infinity) {
      steps.push({
        step: stepNum++,
        title: "–î–æ—Å—Ç–∏—á—å —Ü–µ–ª–µ–≤—ã—Ö –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π",
        description: `–ù–∞–∫–æ–ø–∏—Ç–µ –µ—â–µ ${(needed / 100).toFixed(0)} ‚ÇΩ –¥–ª—è –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π`,
        duration_months: monthsNeeded,
      });
      totalMonths += monthsNeeded;
    }
  }

  if (steps.length === 0) {
    steps.push({
      step: 1,
      title: "–£–≤–µ–ª–∏—á–∏—Ç—å –¥–æ—Ö–æ–¥—ã –∏–ª–∏ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã",
      description: "–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —Ü–µ–ª—è–º",
      duration_months: 0,
    });
  }

  return { steps, total_months: totalMonths };
}

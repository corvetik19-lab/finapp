"use client";

import { useState, useEffect } from "react";
import Joyride, { Step, CallBackProps, STATUS, EVENTS } from "react-joyride";

const TOUR_STEPS: Step[] = [
  {
    target: "body",
    content: (
      <div style={{ padding: "20px" }}>
        <h2 style={{ margin: "0 0 16px 0", fontSize: "24px" }}>
          üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Finappka!
        </h2>
        <p style={{ margin: 0, fontSize: "16px", lineHeight: "1.6" }}>
          –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–π–¥—ë–º –∫—Ä–∞—Ç–∫–∏–π —Ç—É—Ä –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é. –≠—Ç–æ –∑–∞–π–º—ë—Ç –≤—Å–µ–≥–æ 2 –º–∏–Ω—É—Ç—ã.
        </p>
      </div>
    ),
    placement: "center",
    disableBeacon: true,
  },
  {
    target: '[data-tour="dashboard-summary"]',
    content: (
      <div>
        <h3 style={{ margin: "0 0 12px 0" }}>üìä –°–≤–æ–¥–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤</h3>
        <p style={{ margin: 0 }}>
          –ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –æ–±—â–∏–π –±–∞–ª–∞–Ω—Å, –¥–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü.
        </p>
      </div>
    ),
    placement: "bottom",
  },
  {
    target: '[data-tour="add-transaction"]',
    content: (
      <div>
        <h3 style={{ margin: "0 0 12px 0" }}>üí∞ –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é</h3>
        <p style={{ margin: 0 }}>
          –ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥ –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥. –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!
        </p>
      </div>
    ),
    placement: "bottom",
  },
  {
    target: '[data-tour="nav-transactions"]',
    content: (
      <div>
        <h3 style={{ margin: "0 0 12px 0" }}>üìù –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</h3>
        <p style={{ margin: 0 }}>
          –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥—ë—Ç–µ –≤—Å–µ —Å–≤–æ–∏ –¥–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã. –ú–æ–∂–Ω–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å, –∏—Å–∫–∞—Ç—å –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ CSV.
        </p>
      </div>
    ),
    placement: "right",
  },
  {
    target: '[data-tour="nav-budgets"]',
    content: (
      <div>
        <h3 style={{ margin: "0 0 12px 0" }}>üéØ –ë—é–¥–∂–µ—Ç—ã</h3>
        <p style={{ margin: 0 }}>
          –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –±—é–¥–∂–µ—Ç—ã –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —á—Ç–æ–±—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞—Ç—ã –∏ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç—å –∑–∞ —Ä–∞–º–∫–∏.
        </p>
      </div>
    ),
    placement: "right",
  },
  {
    target: '[data-tour="nav-reports"]',
    content: (
      <div>
        <h3 style={{ margin: "0 0 12px 0" }}>üìä –û—Ç—á—ë—Ç—ã</h3>
        <p style={{ margin: 0 }}>
          –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å—ã: –≥—Ä–∞—Ñ–∏–∫–∏, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, —ç–∫—Å–ø–æ—Ä—Ç –≤ PDF –∏ Excel.
        </p>
      </div>
    ),
    placement: "right",
  },
  {
    target: '[data-tour="nav-ai"]',
    content: (
      <div>
        <h3 style={{ margin: "0 0 12px 0" }}>ü§ñ AI –ü–æ–º–æ—â–Ω–∏–∫</h3>
        <p style={{ margin: 0 }}>
          –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–æ–≤, —Å–æ–≤–µ—Ç–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏.
        </p>
      </div>
    ),
    placement: "right",
  },
  {
    target: "body",
    content: (
      <div style={{ padding: "20px" }}>
        <h2 style={{ margin: "0 0 16px 0", fontSize: "24px" }}>
          üéâ –ì–æ—Ç–æ–≤–æ!
        </h2>
        <p style={{ margin: "0 0 16px 0", fontSize: "16px", lineHeight: "1.6" }}>
          –¢–µ–ø–µ—Ä—å –≤—ã –≥–æ—Ç–æ–≤—ã —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏. –ù–∞—á–Ω–∏—Ç–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏!
        </p>
        <p style={{ margin: 0, fontSize: "14px", color: "#666" }}>
          üí° –°–æ–≤–µ—Ç: –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç—É—Ä –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —á–µ—Ä–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
        </p>
      </div>
    ),
    placement: "center",
  },
];

interface JoyrideTourProps {
  run?: boolean;
  onComplete?: () => void;
}

export default function JoyrideTour({ run: runProp, onComplete }: JoyrideTourProps) {
  const [run, setRun] = useState(false);
  const [stepIndex, setStepIndex] = useState(0);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç—É—Ä
    const tourCompleted = localStorage.getItem("finapp_tour_completed");
    if (!tourCompleted && runProp !== false) {
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ DOM
      setTimeout(() => setRun(true), 1000);
    }
  }, [runProp]);

  const handleJoyrideCallback = (data: CallBackProps) => {
    const { status, type, index } = data;

    if (type === EVENTS.STEP_AFTER || type === EVENTS.TARGET_NOT_FOUND) {
      setStepIndex(index + (type === EVENTS.STEP_AFTER ? 1 : 0));
    }

    if (status === STATUS.FINISHED || status === STATUS.SKIPPED) {
      setRun(false);
      localStorage.setItem("finapp_tour_completed", "true");
      localStorage.setItem("finapp_tour_completed_at", new Date().toISOString());
      
      if (onComplete) {
        onComplete();
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î
      fetch("/api/onboarding", {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ completed: true }),
      }).catch(console.error);
    }
  };

  return (
    <Joyride
      steps={TOUR_STEPS}
      run={run}
      stepIndex={stepIndex}
      continuous
      showProgress
      showSkipButton
      scrollToFirstStep
      scrollOffset={100}
      disableOverlayClose
      disableCloseOnEsc={false}
      callback={handleJoyrideCallback}
      styles={{
        options: {
          primaryColor: "#4F46E5",
          textColor: "#1a1a1a",
          backgroundColor: "#ffffff",
          overlayColor: "rgba(0, 0, 0, 0.6)",
          arrowColor: "#ffffff",
          zIndex: 10000,
        },
        tooltip: {
          borderRadius: "12px",
          padding: "20px",
          fontSize: "16px",
        },
        tooltipContainer: {
          textAlign: "left",
        },
        buttonNext: {
          backgroundColor: "#4F46E5",
          borderRadius: "8px",
          padding: "10px 20px",
          fontSize: "15px",
          fontWeight: 600,
        },
        buttonBack: {
          color: "#666",
          marginRight: "10px",
        },
        buttonSkip: {
          color: "#999",
        },
      }}
      locale={{
        back: "‚Üê –ù–∞–∑–∞–¥",
        close: "–ó–∞–∫—Ä—ã—Ç—å",
        last: "–ó–∞–≤–µ—Ä—à–∏—Ç—å",
        next: "–î–∞–ª–µ–µ ‚Üí",
        open: "–û—Ç–∫—Ä—ã—Ç—å",
        skip: "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
      }}
    />
  );
}

"use client";

import { useEffect, useState } from "react";
import styles from "./Forecasts.module.css";
import {
  type OptimizationReport,
  getPriorityColor,
  getImpactColor,
} from "@/lib/ai/optimization-advisor";

export default function OptimizationView() {
  const [loading, setLoading] = useState(true);
  const [report, setReport] = useState<OptimizationReport | null>(null);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    loadReport();
  }, []);

  async function loadReport() {
    try {
      const res = await fetch("/api/ai/optimization");
      if (!res.ok) {
        throw new Error("Failed to load optimization report");
      }
      const data = await res.json();
      setReport(data.report);
    } catch (err) {
      console.error("Error loading optimization:", err);
      setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏");
    } finally {
      setLoading(false);
    }
  }

  const formatMoney = (kopecks: number) => {
    const rubles = kopecks / 100;
    return new Intl.NumberFormat("ru-RU", {
      style: "currency",
      currency: "RUB",
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    }).format(rubles);
  };

  if (loading) {
    return (
      <div className={styles.loading}>
        <div className={styles.spinner}></div>
        <p>–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —ç–∫–æ–Ω–æ–º–∏–∏...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className={styles.error}>
        <div className={styles.errorIcon}>‚ö†Ô∏è</div>
        <h2>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2>
        <p>{error}</p>
      </div>
    );
  }

  if (!report || report.opportunities.length === 0) {
    return (
      <div className={styles.noAlerts}>
        <div className={styles.noAlertsIcon}>‚úÖ</div>
        <h2>–í–∞—à –±—é–¥–∂–µ—Ç –æ–ø—Ç–∏–º–∞–ª–µ–Ω!</h2>
        <p>–ú—ã –Ω–µ –Ω–∞—à–ª–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã.</p>
      </div>
    );
  }

  return (
    <div className={styles.optimizationView}>
      {/* –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className={styles.optimizationSummary}>
        <div className={styles.summaryCard}>
          <div className={styles.summaryIcon}>üí∞</div>
          <div className={styles.summaryContent}>
            <div className={styles.summaryLabel}>–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è</div>
            <div className={styles.summaryValue}>{formatMoney(report.total_potential_savings)}</div>
            <div className={styles.summarySubtext}>–≤ –º–µ—Å—è—Ü</div>
          </div>
        </div>
        <div className={styles.summaryCard}>
          <div className={styles.summaryIcon}>üìä</div>
          <div className={styles.summaryContent}>
            <div className={styles.summaryLabel}>–¢–µ–∫—É—â–∏–µ —Ç—Ä–∞—Ç—ã</div>
            <div className={styles.summaryValue}>{formatMoney(report.total_monthly_spending)}</div>
            <div className={styles.summarySubtext}>–≤ –º–µ—Å—è—Ü</div>
          </div>
        </div>
        <div className={styles.summaryCard}>
          <div className={styles.summaryIcon}>üéØ</div>
          <div className={styles.summaryContent}>
            <div className={styles.summaryLabel}>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –±—é–¥–∂–µ—Ç</div>
            <div className={styles.summaryValue}>{formatMoney(report.recommended_spending)}</div>
            <div className={styles.summarySubtext}>–≤ –º–µ—Å—è—Ü</div>
          </div>
        </div>
        <div className={styles.summaryCard}>
          <div className={styles.summaryIcon}>üìâ</div>
          <div className={styles.summaryContent}>
            <div className={styles.summaryLabel}>–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ</div>
            <div className={styles.summaryValue} style={{ color: "#10b981" }}>
              -{report.savings_percentage.toFixed(1)}%
            </div>
            <div className={styles.summarySubtext}>–æ—Ç —Ç–µ–∫—É—â–∏—Ö —Ç—Ä–∞—Ç</div>
          </div>
        </div>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –ø–æ–±–µ–¥—ã */}
      {report.quick_wins.length > 0 && (
        <div className={styles.quickWinsSection}>
          <h2>‚ö° –ë—ã—Å—Ç—Ä—ã–µ –ø–æ–±–µ–¥—ã</h2>
          <p className={styles.sectionSubtitle}>–ü—Ä–æ—Å—Ç—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞–¥—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É–∂–µ —Å–µ–≥–æ–¥–Ω—è</p>
          <div className={styles.quickWinsList}>
            {report.quick_wins.map((win, idx) => (
              <div key={idx} className={styles.quickWinCard}>
                <div className={styles.quickWinIcon}>‚úì</div>
                <div className={styles.quickWinText}>{win}</div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* –¢–æ–ø-3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
      <div className={styles.top3Section}>
        <h2>üéØ –¢–æ–ø-3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏</h2>
        <div className={styles.top3Grid}>
          {report.top_3_categories.map((cat, idx) => (
            <div key={cat.category} className={styles.top3Card}>
              <div className={styles.top3Rank}>#{idx + 1}</div>
              <div className={styles.top3Category}>{cat.category}</div>
              <div className={styles.top3Current}>
                <span className={styles.top3Label}>–°–µ–π—á–∞—Å:</span>
                <span>{formatMoney(cat.current)}/–º–µ—Å</span>
              </div>
              <div className={styles.top3Savings}>
                <span className={styles.top3Label}>–≠–∫–æ–Ω–æ–º–∏—è:</span>
                <span style={{ color: "#10b981", fontWeight: 600 }}>
                  {formatMoney(cat.savings)}/–º–µ—Å
                </span>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ */}
      <div className={styles.opportunitiesSection}>
        <h2>üí° –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ ({report.opportunities.length})</h2>
        <div className={styles.opportunitiesList}>
          {report.opportunities.map((opp) => (
            <div key={opp.id} className={styles.opportunityCard}>
              <div className={styles.opportunityHeader}>
                <div className={styles.opportunityTitle}>
                  <span className={styles.opportunityCategory}>{opp.category}</span>
                  <span
                    className={styles.opportunityPriority}
                    style={{ backgroundColor: getPriorityColor(opp.priority) }}
                  >
                    {opp.priority === "high"
                      ? "–í–´–°–û–ö–ò–ô"
                      : opp.priority === "medium"
                      ? "–°–†–ï–î–ù–ò–ô"
                      : "–ù–ò–ó–ö–ò–ô"}
                  </span>
                </div>
                <div className={styles.opportunitySavings}>
                  –≠–∫–æ–Ω–æ–º–∏—è: <strong>{formatMoney(opp.potential_savings)}/–º–µ—Å</strong>
                </div>
              </div>

              <div className={styles.opportunityStats}>
                <div className={styles.opportunityStat}>
                  <span className={styles.statLabel}>–¢—Ä–∞—Ç–∏—Ç–µ —Å–µ–π—á–∞—Å:</span>
                  <span className={styles.statValue}>{formatMoney(opp.current_spending)}</span>
                </div>
                <div className={styles.opportunityStat}>
                  <span className={styles.statLabel}>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º:</span>
                  <span className={styles.statValue} style={{ color: "#10b981" }}>
                    {formatMoney(opp.recommended_spending)}
                  </span>
                </div>
                <div className={styles.opportunityStat}>
                  <span className={styles.statLabel}>–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ:</span>
                  <span className={styles.statValue} style={{ color: "#f59e0b" }}>
                    -{opp.savings_percentage.toFixed(1)}%
                  </span>
                </div>
              </div>

              <div className={styles.opportunityAdvice}>
                <strong>üí¨ –°–æ–≤–µ—Ç:</strong> {opp.advice}
              </div>

              <div className={styles.opportunityTips}>
                <strong>üìã –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</strong>
                <ul>
                  {opp.specific_tips.map((tip, idx) => (
                    <li key={idx}>{tip}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* –î–µ–Ω–µ–∂–Ω—ã–µ —É—Ç–µ—á–∫–∏ */}
      {report.money_leaks.length > 0 && (
        <div className={styles.leaksSection}>
          <h2>üö∞ –î–µ–Ω–µ–∂–Ω—ã–µ —É—Ç–µ—á–∫–∏</h2>
          <p className={styles.sectionSubtitle}>
            –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –º–µ–ª–∫–∏–µ —Ç—Ä–∞—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ &quot;—Å—ä–µ–¥–∞—é—Ç&quot; –≤–∞—à –±—é–¥–∂–µ—Ç
          </p>
          <div className={styles.leaksList}>
            {report.money_leaks.map((leak, idx) => (
              <div key={idx} className={styles.leakCard}>
                <div className={styles.leakHeader}>
                  <div className={styles.leakCategory}>{leak.category}</div>
                  <div
                    className={styles.leakImpact}
                    style={{ backgroundColor: getImpactColor(leak.impact) }}
                  >
                    {leak.impact === "high"
                      ? "–í–´–°–û–ö–û–ï –í–õ–ò–Ø–ù–ò–ï"
                      : leak.impact === "medium"
                      ? "–°–†–ï–î–ù–ï–ï"
                      : "–ù–ò–ó–ö–û–ï"}
                  </div>
                </div>
                <div className={styles.leakStats}>
                  <div className={styles.leakStat}>
                    <div className={styles.leakStatLabel}>–ß–∞—Å—Ç–æ—Ç–∞</div>
                    <div className={styles.leakStatValue}>{leak.frequency} —Ä–∞–∑/–º–µ—Å</div>
                  </div>
                  <div className={styles.leakStat}>
                    <div className={styles.leakStatLabel}>–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</div>
                    <div className={styles.leakStatValue}>{formatMoney(leak.average_amount)}</div>
                  </div>
                  <div className={styles.leakStat}>
                    <div className={styles.leakStatLabel}>–ò—Ç–æ–≥–æ –≤ –º–µ—Å—è—Ü</div>
                    <div className={styles.leakStatValue} style={{ color: "#dc2626" }}>
                      {formatMoney(leak.monthly_total)}
                    </div>
                  </div>
                  <div className={styles.leakStat}>
                    <div className={styles.leakStatLabel}>–¢–∏–ø</div>
                    <div className={styles.leakStatValue}>
                      {leak.leak_type === "frequent_small"
                        ? "–ß–∞—Å—Ç—ã–µ –º–µ–ª–∫–∏–µ"
                        : leak.leak_type === "subscription"
                        ? "–ü–æ–¥–ø–∏—Å–∫–∞"
                        : "–ò–º–ø—É–ª—å—Å–∏–≤–Ω—ã–µ"}
                    </div>
                  </div>
                </div>
                <div className={styles.leakSuggestion}>
                  <strong>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> {leak.suggestion}
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã */}
      {report.personalized_advice.length > 0 && (
        <div className={styles.personalAdviceSection}>
          <h2>üéì –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã</h2>
          <div className={styles.adviceList}>
            {report.personalized_advice.map((advice, idx) => (
              <div key={idx} className={styles.adviceCard}>
                {advice}
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
}

import { getCommandsModel } from "@/lib/ai/openrouter";
import { streamText } from "ai";
import { createRSCClient } from "@/lib/supabase/server";
import type { CoreMessage } from "ai";

interface TransactionData {
  date: string;
  direction: "income" | "expense" | "transfer";
  amount: number;
  description?: string;
  categories?: Array<{
    name: string;
    type: string;
  }>;
}

interface BudgetData {
  spent: number;
  amount: number;
  categories?: Array<{
    name: string;
  }>;
}

// Allow streaming responses up to 30 seconds
export const maxDuration = 30;

export async function POST(req: Request) {
  try {
    const { messages }: { messages: CoreMessage[] } = await req.json();

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const supabase = await createRSCClient();
    const {
      data: { user },
    } = await supabase.auth.getUser();

    if (!user) {
      return new Response("Unauthorized", { status: 401 });
    }

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const { data: recentTransactions } = await supabase
      .from("transactions")
      .select(
        `
        id,
        amount,
        direction,
        description,
        date,
        category_id,
        categories!inner (name, type)
      `
      )
      .eq("user_id", user.id)
      .order("date", { ascending: false })
      .limit(10);

    // –ü–æ–ª—É—á–∞–µ–º —Å—á–µ—Ç–∞
    const { data: accounts } = await supabase
      .from("accounts")
      .select("id, name, balance, currency")
      .eq("user_id", user.id);

    // –ü–æ–ª—É—á–∞–µ–º –±—é–¥–∂–µ—Ç—ã
    const { data: budgets } = await supabase
      .from("budgets")
      .select(
        `
        id,
        amount,
        spent,
        period_start,
        period_end,
        category_id,
        categories!inner (name)
      `
      )
      .eq("user_id", user.id);

    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è AI
    const contextInfo = `
## –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:

### –°—á–µ—Ç–∞:
${accounts?.map((acc) => `- ${acc.name}: ${(acc.balance / 100).toFixed(2)} ${acc.currency}`).join("\n") || "–ù–µ—Ç —Å—á–µ—Ç–æ–≤"}

### –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:
${
  recentTransactions
    ?.map(
      (t: TransactionData) =>
        `- ${new Date(t.date).toLocaleDateString("ru-RU")}: ${t.direction === "income" ? "+" : "-"}${(t.amount / 100).toFixed(2)} —Ä—É–±. - ${t.description || t.categories?.[0]?.name || "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"}`
    )
    .join("\n") || "–ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"
}

### –ë—é–¥–∂–µ—Ç—ã:
${
  budgets
    ?.map(
      (b: BudgetData) =>
        `- ${b.categories?.[0]?.name || "–û–±—â–∏–π"}: ${(b.spent / 100).toFixed(2)} / ${(b.amount / 100).toFixed(2)} —Ä—É–±. (${((b.spent / b.amount) * 100).toFixed(0)}%)`
    )
    .join("\n") || "–ù–µ—Ç –±—é–¥–∂–µ—Ç–æ–≤"
}
`;

    const systemPrompt = `–¢—ã ‚Äî —É–º–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è FinApp.

–¢–í–û–Ø –†–û–õ–¨:
- –ü–æ–º–æ–≥–∞–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏
- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—à—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –¥–∞—ë—à—å —Å–æ–≤–µ—Ç—ã
- –û—Ç–≤–µ—á–∞–µ—à—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –ø—Ä–æ—Å—Ç—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º —è–∑—ã–∫–æ–º
- –ò—Å–ø–æ–ª—å–∑—É–µ—à—å —ç–º–æ–¥–∑–∏ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ (üí∞ üí∏ üìä üìà üìâ ‚úÖ ‚ö†Ô∏è üí°)

${contextInfo}

–í–û–ó–ú–û–ñ–ù–û–°–¢–ò:
- –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –¥–æ—Ö–æ–¥–æ–≤
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±—é–¥–∂–µ—Ç—É
- –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö
- –°–æ–≤–µ—Ç—ã –ø–æ —ç–∫–æ–Ω–æ–º–∏–∏

–í–ê–ñ–ù–û:
- –í—Å–µ —Å—É–º–º—ã –≤ —Ä—É–±–ª—è—Ö (‚ÇΩ)
- –ë—É–¥—å –≤–µ–∂–ª–∏–≤—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º
- –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞–π –Ω–∞—á–∞—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏

–ü–†–ò–ú–ï–†–´ –í–û–ü–†–û–°–û–í:
- "–°–∫–æ–ª—å–∫–æ —è –ø–æ—Ç—Ä–∞—Ç–∏–ª –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ?"
- "–ù–∞ —á—Ç–æ —è —Ç—Ä–∞—á—É –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?"
- "–ö–∞–∫ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –¥–µ–Ω—å–≥–∏?"
- "–ö–∞–∫–æ–π —É –º–µ–Ω—è –±–∞–ª–∞–Ω—Å?"
`;

    const result = await streamText({
      model: getCommandsModel(),
      system: systemPrompt,
      messages: messages,
      temperature: 0.7,
    });

    return result.toTextStreamResponse();
  } catch (error) {
    console.error("Chat API error:", error);
    return new Response("Internal Server Error", { status: 500 });
  }
}
